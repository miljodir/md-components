/*! For license information please see FileUpload-stories.66f693d9.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_miljodirektoratet_md_components=self.webpackChunk_miljodirektoratet_md_components||[]).push([[3034],{"./node_modules/@storybook/addon-docs/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/addon-docs/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes="",i=0;i<arguments.length;i++){var arg=arguments[i];arg&&(classes=appendClass(classes,parseValue(arg)))}return classes}function parseValue(arg){if("string"==typeof arg||"number"==typeof arg)return arg;if("object"!=typeof arg)return"";if(Array.isArray(arg))return classNames.apply(null,arg);if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]"))return arg.toString();var classes="";for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&(classes=appendClass(classes,key));return classes}function appendClass(value,newClass){return newClass?value?value+" "+newClass:value+newClass:value}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/storybook/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/storybook/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/theming sync recursive",module.exports=webpackEmptyContext},"./packages/react/src/loadingSpinner/MdLoadingSpinner.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{N:()=>MdLoadingSpinner,A:()=>loadingSpinner_MdLoadingSpinner});var DXGKYUAD=__webpack_require__("./node_modules/@ariakit/react-core/esm/__chunks/DXGKYUAD.js"),classnames=__webpack_require__("./node_modules/classnames/index.js"),classnames_default=__webpack_require__.n(classnames),react=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const icons_material_MdIconLoadingSpinner=_ref=>{let{className,width=100,height=100,...otherProps}=_ref;return react.createElement("svg",_extends({viewBox:"0 0 100 100",version:"1.1",xmlns:"http://www.w3.org/2000/svg",xmlnsXlink:"http://www.w3.org/1999/xlink",className,width,height},otherProps),react.createElement("circle",{cx:"50",cy:"90",r:"10",fill:"#CCDFDE"}),react.createElement("circle",{cx:"90",cy:"50",r:"10",fill:"#CCDFDE"}),react.createElement("circle",{cx:"10",cy:"50",r:"10",fill:"#CCDFDE"}),react.createElement("circle",{cx:"78",cy:"78",r:"10",fill:"#CCDFDE"}),react.createElement("circle",{cx:"22",cy:"78",r:"10",fill:"#CCDFDE"}),react.createElement("circle",{cx:"50",cy:"10",r:"10",fill:"#005E5D"}),react.createElement("circle",{cx:"78",cy:"22",r:"10",fill:"#CCDFDE"}),react.createElement("circle",{cx:"22",cy:"22",r:"10",fill:"#CCDFDE"}))};function MdLoadingSpinner_extends(){return MdLoadingSpinner_extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},MdLoadingSpinner_extends.apply(null,arguments)}const MdLoadingSpinner=_ref=>{let{size,position="",className="",...otherProps}=_ref;const classNames=classnames_default()("md-loading-spinner__container",{"md-loading-spinner__container--left":"left"===position,"md-loading-spinner__container--right":"right"===position},className);return react.createElement("div",MdLoadingSpinner_extends({className:classNames},otherProps),react.createElement(DXGKYUAD.s,null,"Laster.."),react.createElement(icons_material_MdIconLoadingSpinner,{"aria-hidden":!0,className:"md-loading-spinner",width:size,height:size}))},loadingSpinner_MdLoadingSpinner=MdLoadingSpinner},"./stories/FileUpload.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{FileUpload:()=>FileUpload,__namedExportsOrder:()=>__namedExportsOrder,default:()=>FileUpload_stories});var blocks=__webpack_require__("./node_modules/@storybook/addon-docs/dist/blocks.mjs"),react=__webpack_require__("./node_modules/react/index.js");var MdFileUpload=__webpack_require__("./packages/react/src/formElements/MdFileUpload.tsx");const FileUpload_stories={title:"Form/FileUpload",component:MdFileUpload.t,parameters:{docs:{page:()=>react.createElement(react.Fragment,null,react.createElement(blocks.hE,null),react.createElement(blocks.Pd,null),react.createElement(blocks.VY,null),react.createElement(blocks.Tn,null),react.createElement(blocks.H2,null),react.createElement(blocks.oz,null,'# Structure\n\nTo use the `FileUpload` css in `@miljodirektoratet/md-css` as a standalone, without the accompanying React component, please use the following HTML structure.\n\nClass names in brackets [] are optional-/togglable-/decorator- or state dependant classes.\n\nSee [Storybook](https://miljodir.github.io/md-components) for examples and more info.\n\n```html\n<div class="md-fileupload">\n  <div class="md-fileupload__droparea" onDragEnter="{}" onDragLeave="{}" onDragEnd="{}" onDragOver="{}" onDrop="{}">\n    <div class="md-fileupload__droparea-icon">\n      <MdUploadIcon />\n      \x3c!-- Icon for upload --\x3e\n    </div>\n\n    <div class="md-fileupload__droparea-content">\n      Dropp en fil eller <button onClick="{}">velg fra denne maskinen</button>\n    </div>\n\n    <input ref="{inputRef}" type="file" multiple class="md-fileupload__input" onChange="{}" />\n\n    \x3c!-- List files, for this we use the filelist-component, see separate structure for this --\x3e\n    <div class="md-fileupload__files-wrapper">\n      <MdFileList />\n    </div>\n    }\n  </div>\n\n  <div class="md-fileupload__actions">\n    \x3c!-- Buttons for upload/done and cancel --\x3e\n    <MdButton> {cancelButtonText} </MdButton>\n    <MdButton> {uploadButtonText} </MdButton>\n  </div>\n</div>\n```\n'.toString())),description:{component:"A component for handling file upload with drag and drop. Returns an array of files, to do with as you please.<br/><br/>`import { MdFileUpload } from '@miljodirektoratet/md-react'`"}}},argTypes:{useFormData:{type:{name:"boolean"},description:"Return `FormData` or an array of files.",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},hideFileListIcons:{type:{name:"boolean"},description:"Hide document icons in file list",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},uploadButtonText:{type:{name:"string"},description:"Text for upload button.",table:{defaultValue:{summary:"Last opp"},type:{summary:"string"}},control:{type:"text"}},cancelButtonText:{type:{name:"string"},description:"Text for cancel button.",table:{defaultValue:{summary:"Avbryt"},type:{summary:"string"}},control:{type:"text"}},uploadTexts:{type:{name:"array"},description:"Texts for upload area. Default depends on value of `imagesOnly`. Can be used to give user extra information about the upload, or change the language of the upload text.",table:{defaultValue:{summary:'["Dropp en fil her eller", "velg fra denne maskinen"]'},type:{summary:"array"}}},multiple:{type:{name:"boolean"},description:"Allow multiple files",table:{defaultValue:{summary:"true"},type:{summary:"boolean"}},control:{type:"boolean"}},imagesOnly:{type:{name:"boolean"},description:"Allow only images to be uploaded",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},automaticTrigger:{type:{name:"boolean"},description:"Automatically trigger the onUpload callback whenever the filelist changes. Will not trigger when filelist becomes empty.",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},hideButtons:{type:{name:"boolean"},description:"Hide upload and cancel buttons. Useful when automaticTrigger is set to true.",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},onUpload:{type:{name:"function"},description:"The callback for handling files for upload. This function returns an array of files, or a `FormData`-object if `useFormData = true`. Example use in your component: `onUpload={(files) => handleUpload(files)}`",action:"Upload"},onCancel:{type:{name:"function"},description:"The callback for canceling upload. Clear selected files, and returns the ClickEvent from button",table:{type:{summary:"function"}},action:"Cancel"}}},FileUpload=(args=>react.createElement(MdFileUpload.t,args)).bind({});FileUpload.args={useFormData:!1,uploadButtonText:"Last opp",cancelButtonText:"Avbryt",hideFileListIcons:!1,multiple:!0,imagesOnly:!1,automaticTrigger:!1,hideButtons:!1};const __namedExportsOrder=["FileUpload"];FileUpload.parameters={...FileUpload.parameters,docs:{...FileUpload.parameters?.docs,source:{originalSource:"(args: Args) => {\n  return <MdFileUpload {...args} />;\n}",...FileUpload.parameters?.docs?.source}}}}}]);