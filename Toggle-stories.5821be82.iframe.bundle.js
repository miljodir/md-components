/*! For license information please see Toggle-stories.5821be82.iframe.bundle.js.LICENSE.txt */
(self.webpackChunk_miljodirektoratet_md_components=self.webpackChunk_miljodirektoratet_md_components||[]).push([[6131],{"./node_modules/@storybook/addon-docs/dist sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/@storybook/addon-docs/dist sync recursive",module.exports=webpackEmptyContext},"./node_modules/classnames/index.js":(module,exports)=>{var __WEBPACK_AMD_DEFINE_RESULT__;!function(){"use strict";var hasOwn={}.hasOwnProperty;function classNames(){for(var classes="",i=0;i<arguments.length;i++){var arg=arguments[i];arg&&(classes=appendClass(classes,parseValue(arg)))}return classes}function parseValue(arg){if("string"==typeof arg||"number"==typeof arg)return arg;if("object"!=typeof arg)return"";if(Array.isArray(arg))return classNames.apply(null,arg);if(arg.toString!==Object.prototype.toString&&!arg.toString.toString().includes("[native code]"))return arg.toString();var classes="";for(var key in arg)hasOwn.call(arg,key)&&arg[key]&&(classes=appendClass(classes,key));return classes}function appendClass(value,newClass){return newClass?value?value+" "+newClass:value+newClass:value}module.exports?(classNames.default=classNames,module.exports=classNames):void 0===(__WEBPACK_AMD_DEFINE_RESULT__=function(){return classNames}.apply(exports,[]))||(module.exports=__WEBPACK_AMD_DEFINE_RESULT__)}()},"./node_modules/storybook/dist/components sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/components sync recursive",module.exports=webpackEmptyContext},"./node_modules/storybook/dist/theming sync recursive":module=>{function webpackEmptyContext(req){var e=new Error("Cannot find module '"+req+"'");throw e.code="MODULE_NOT_FOUND",e}webpackEmptyContext.keys=()=>[],webpackEmptyContext.resolve=webpackEmptyContext,webpackEmptyContext.id="./node_modules/storybook/dist/theming sync recursive",module.exports=webpackEmptyContext},"./packages/react/src/toggle/MdToggle.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.d(__webpack_exports__,{s:()=>MdToggle});var classnames__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./node_modules/classnames/index.js"),classnames__WEBPACK_IMPORTED_MODULE_0___default=__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_0__),react__WEBPACK_IMPORTED_MODULE_1__=__webpack_require__("./node_modules/react/index.js");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const MdToggle=_ref=>{let{checked=!0,label,id,disabled=!1,error=!1,errorText,wrapperClass="",...otherProps}=_ref;const uuid=(0,react__WEBPACK_IMPORTED_MODULE_1__.useId)(),toggleId=id&&""!==id?id:uuid,classNames=classnames__WEBPACK_IMPORTED_MODULE_0___default()("md-toggle__label",{"md-toggle__label--error":!!error,"md-toggle__label--checked":!!checked,"md-toggle__label--disabled":!!disabled}),labelWrapperClassNames=classnames__WEBPACK_IMPORTED_MODULE_0___default()("md-toggle__label-wrapper",{"md-toggle__label-wrapper--disabled":!!disabled}),outerWrapperClassNames=classnames__WEBPACK_IMPORTED_MODULE_0___default()("md-toggle__wrapper",wrapperClass);return react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",null,react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{className:outerWrapperClassNames},react__WEBPACK_IMPORTED_MODULE_1__.createElement("input",_extends({tabIndex:0,className:"md-toggle__checkbox",id:toggleId,type:"checkbox",checked,disabled},otherProps)),react__WEBPACK_IMPORTED_MODULE_1__.createElement("label",{className:labelWrapperClassNames,htmlFor:toggleId},react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{className:"md-toggle__label-text"},label),react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{className:classNames},react__WEBPACK_IMPORTED_MODULE_1__.createElement("span",{className:"md-toggle__button"})))),error&&errorText&&""!==errorText&&react__WEBPACK_IMPORTED_MODULE_1__.createElement("div",{className:"md-toggle__error"},errorText))}},"./stories/Toggle.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{"use strict";__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{Toggle:()=>Toggle,__namedExportsOrder:()=>__namedExportsOrder,default:()=>Toggle_stories});var blocks=__webpack_require__("./node_modules/@storybook/addon-docs/dist/blocks.mjs"),react=__webpack_require__("./node_modules/react/index.js"),external_STORYBOOK_MODULE_PREVIEW_API_=__webpack_require__("storybook/preview-api");var MdToggle=__webpack_require__("./packages/react/src/toggle/MdToggle.tsx");function _extends(){return _extends=Object.assign?Object.assign.bind():function(n){for(var e=1;e<arguments.length;e++){var t=arguments[e];for(var r in t)({}).hasOwnProperty.call(t,r)&&(n[r]=t[r])}return n},_extends.apply(null,arguments)}const Toggle_stories={title:"Components/Toggle",component:MdToggle.s,parameters:{docs:{page:()=>react.createElement(react.Fragment,null,react.createElement(blocks.hE,null),react.createElement(blocks.Pd,null),react.createElement(blocks.VY,null),react.createElement(blocks.Tn,null),react.createElement(blocks.H2,null),react.createElement(blocks.oz,null,'# Structure\n\nTo use the `Toggle` css in `@miljodirektoratet/md-css` as a standalone, without the accompanying React component, please use the following HTML structure.\n\nClass names in brackets [] are optional-/togglable-/decorator- or state dependant classes.\n\nSee [Storybook](https://miljodir.github.io/md-components) for examples and more info.\n\n```html\n<div>\n  <div class="md-toggle__wrapper">\n    <input class="md-toggle__checkbox" type="checkbox" checked="{true|false}" onChange="{}" />\n    <label class="md-toggle__label-wrapper [md-toggle__label-wrapper--disabled]">\n      <div class="md-toggle__label-text">{label}</div>\n      <div class="md-toggle__label [md-toggle__label--checked, md-toggle__label--disabled]">\n        <span class="md-toggle__button" />\n      </div>\n    </label>\n  </div>\n  <div class="md-toggle__error">{errorText}</div>\n</div>\n```\n'.toString())),description:{component:"Toggle switch. In addition to the properties presented here, the component accepts all standard attributes of a HTML Input element.<br/><br/>`import { MdToggle } from '@miljodirektoratet/md-react'`"}}},argTypes:{checked:{description:"Is the toggle on or off?",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},id:{type:{name:"string",required:!0},description:"Id for the toggle. If not set, uses a random uuid",table:{type:{defaultValue:{summary:"useId()"},summary:"string"}},control:{type:"text"}},label:{type:{name:"string"},description:"The label for the toggle",table:{defaultValue:{summary:"null"},type:{summary:"string"}},control:{type:"text"}},disabled:{description:"Is the toggle disabled?",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},error:{description:"Does toggle contain an error?",table:{defaultValue:{summary:"false"},type:{summary:"boolean"}},control:{type:"boolean"}},errorText:{type:{name:"string"},description:"The error text to display",table:{defaultValue:{summary:"null"},type:{summary:"string"}},control:{type:"text"}},onChange:{type:{name:"function"},description:"The onChange handler for change events. Returns a ChangeEvent.",table:{type:{summary:"function"}}}}},Toggle=(args=>{const[,updateArgs]=(0,external_STORYBOOK_MODULE_PREVIEW_API_.useArgs)();return react.createElement(MdToggle.s,_extends({},args,{onChange:e=>{updateArgs({...args,checked:e?.target?.checked})}}))}).bind({});Toggle.args={label:"Label",checked:!1,disabled:!1,error:!1,errorText:""};const __namedExportsOrder=["Toggle"];Toggle.parameters={...Toggle.parameters,docs:{...Toggle.parameters?.docs,source:{originalSource:"(args: MdToggleProps) => {\n  const [, updateArgs] = useArgs();\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    updateArgs({\n      ...args,\n      checked: e?.target?.checked\n    });\n  };\n  return <MdToggle {...args} onChange={handleChange} />;\n}",...Toggle.parameters?.docs?.source}}}}}]);